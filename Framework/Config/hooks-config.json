{
  "version": "1.0.0",
  "description": "SuperClaude Hooks Configuration - Enhanced Task Management System v2.0",
  
  "general": {
    "enabled": true,
    "verbosity": "verbose",
    "auto_load": true,
    "performance_monitoring": true,
    "security_level": "standard",
    "max_concurrent_hooks": 5,
    "default_timeout_ms": 100,
    "log_level": "INFO"
  },
  
  "security": {
    "input_validation": true,
    "path_sanitization": true,
    "execution_sandboxing": true,
    "max_input_size_bytes": 10000,
    "max_memory_usage_mb": 50,
    "allowed_file_extensions": [
      ".txt", ".json", ".yaml", ".yml", ".md",
      ".py", ".js", ".ts", ".html", ".css",
      ".log", ".conf", ".config", ".ini"
    ],
    "blocked_file_extensions": [
      ".exe", ".dll", ".so", ".dylib", ".bat",
      ".cmd", ".ps1", ".sh", ".bash", ".zsh"
    ]
  },
  
  "performance": {
    "profiling_enabled": true,
    "metrics_collection": true,
    "warning_threshold_ms": 80,
    "critical_threshold_ms": 100,
    "memory_monitoring": true,
    "benchmark_tracking": true,
    "history_retention_count": 100
  },
  
  "storage": {
    "persistence_enabled": true,
    "auto_save": true,
    "save_interval_seconds": 30,
    "backup_enabled": true,
    "cleanup_completed_hours": 24,
    "max_task_history": 1000
  },
  
  "compatibility": {
    "claude_code_integration": true,
    "backward_compatibility": true,
    "native_tools_priority": true,
    "fallback_enabled": true
  },
  
  "task_management": {
    "cross_session_persistence": true,
    "dependency_tracking": true,
    "priority_scheduling": true,
    "progress_monitoring": true,
    "automatic_cleanup": true,
    "session_isolation": false
  },
  
  "hooks": {
    "task_validator": {
      "enabled": true,
      "priority": "high",
      "timeout_ms": 50,
      "triggers": ["task_create", "task_update", "task_execute"],
      "description": "Validates task data and execution context"
    },
    
    "execution_monitor": {
      "enabled": true,
      "priority": "normal",
      "timeout_ms": 25,
      "triggers": ["hook_start", "hook_complete"],
      "description": "Monitors hook execution performance and compliance"
    },
    
    "state_synchronizer": {
      "enabled": true,
      "priority": "high",
      "timeout_ms": 75,
      "triggers": ["task_state_change", "session_start", "session_end"],
      "description": "Synchronizes task states across sessions"
    },
    
    "dependency_resolver": {
      "enabled": true,
      "priority": "normal",
      "timeout_ms": 100,
      "triggers": ["task_schedule", "dependency_update"],
      "description": "Resolves task dependencies and scheduling"
    },
    
    "integration_bridge": {
      "enabled": true,
      "priority": "critical",
      "timeout_ms": 50,
      "triggers": ["command_execute", "tool_call"],
      "description": "Bridges hooks with Claude Code native tools"
    },
    
    "map_update_checker": {
      "enabled": true,
      "priority": "medium",
      "timeout_ms": 100,
      "triggers": ["post_tool_use"],
      "tools": ["Write", "Edit", "MultiEdit"],
      "script": "map-update-checker.py",
      "description": "Detects file changes that affect CodeBase.md sections",
      "config": {
        "check_codebase_md": true,
        "track_changes": true,
        "suggestion_threshold": 1
      }
    },
    
    "map_session_check": {
      "enabled": true,
      "priority": "low",
      "timeout_ms": 50,
      "triggers": ["session_start"],
      "script": "map-session-check.py",
      "description": "Checks CodeBase.md freshness at session start",
      "config": {
        "freshness_hours": 24,
        "stale_hours": 72,
        "cleanup_tracking": true
      }
    },
    
    "quality_gate_trigger": {
      "enabled": true,
      "priority": "high",
      "timeout_ms": 50,
      "triggers": ["post_tool_use"],
      "tools": ["Write", "Edit", "MultiEdit"],
      "script": "quality_gate_trigger.py",
      "description": "Automated quality gate validation with workflow step tracking",
      "config": {
        "enable_syntax_validation": true,
        "enable_type_analysis": true,
        "enable_documentation_patterns": true,
        "quality_score_threshold": 0.7,
        "intermediate_checkpoint": true,
        "comprehensive_checkpoint": true
      }
    },
    
    "mcp_router_advisor": {
      "enabled": true,
      "priority": "medium",
      "timeout_ms": 30,
      "triggers": ["pre_tool_use"],
      "tools": "*",
      "script": "mcp_router_advisor.py",
      "description": "Intelligent MCP server routing with performance optimization",
      "config": {
        "context7_threshold": 0.4,
        "sequential_threshold": 0.6,
        "magic_threshold": 0.3,
        "playwright_threshold": 0.5,
        "token_efficiency_target": 0.25,
        "performance_gain_target": 0.35
      }
    },
    
    "cache_invalidator": {
      "enabled": true,
      "priority": "high",
      "timeout_ms": 100,
      "triggers": ["post_tool_use"],
      "tools": ["Write", "Edit", "MultiEdit"],
      "script": "cache_invalidator.py",
      "description": "Intelligent project context cache invalidation when key files change",
      "config": {
        "key_files": [
          "package.json", "pyproject.toml", "Cargo.toml", "go.mod",
          "requirements.txt", "composer.json", "pom.xml", "build.gradle",
          "tsconfig.json", "webpack.config.js", "vite.config.js",
          ".env", "config.json", "settings.json", "app.config.js"
        ],
        "directory_patterns": [
          "src/config/", "config/", "configs/", "settings/",
          "lib/", "libs/", "shared/", "common/", "utils/"
        ],
        "cache_types": ["project_context", "dependency_cache", "config_cache"]
      }
    },
    
    "evidence_collector": {
      "enabled": true,
      "priority": "medium",
      "timeout_ms": 20,
      "triggers": ["post_tool_use"],
      "tools": "*",
      "script": "evidence_collector.py",
      "description": "Real-time evidence collection and documentation system",
      "config": {
        "evidence_categories": {
          "file_operations": 0.25,
          "analysis_results": 0.20,
          "test_outcomes": 0.20,
          "quality_metrics": 0.15,
          "performance_data": 0.10,
          "error_handling": 0.10
        },
        "claudedocs_integration": true,
        "real_time_updates": true,
        "cross_reference_threshold": 0.3,
        "validation_score_target": 0.95
      }
    },
    
    "hook_coordinator": {
      "enabled": true,
      "priority": "critical",
      "timeout_ms": 100,
      "triggers": ["pre_tool_use", "post_tool_use"],
      "tools": "*",
      "script": "hook_coordinator.py",
      "description": "Central coordination system for all SuperClaude automation hooks",
      "config": {
        "coordinate_hooks": true,
        "parallel_execution": true,
        "performance_monitoring": true,
        "error_recovery": true,
        "max_execution_time_ms": 100,
        "quality_improvement_target": 0.15,
        "validation_success_target": 0.95,
        "token_efficiency_target": 0.25
      }
    }
  },
  
  "platforms": {
    "windows": {
      "supported": true,
      "specific_settings": {
        "file_locking": "windows_style",
        "path_separator": "\\",
        "temp_directory": "%TEMP%\\superclaude"
      }
    },
    
    "macos": {
      "supported": true,
      "specific_settings": {
        "file_locking": "unix_style",
        "path_separator": "/",
        "temp_directory": "/tmp/superclaude"
      }
    },
    
    "linux": {
      "supported": true,
      "specific_settings": {
        "file_locking": "unix_style",
        "path_separator": "/",
        "temp_directory": "/tmp/superclaude"
      }
    }
  },
  
  "directories": {
    "config_dir": "~/.config/superclaude/hooks",
    "data_dir": "~/.local/share/superclaude/hooks",
    "temp_dir": "/tmp/superclaude/hooks",
    "log_dir": "~/.local/share/superclaude/logs",
    "backup_dir": "~/.local/share/superclaude/backups"
  },
  
  "integration": {
    "installer_compatibility": true,
    "existing_infrastructure": true,
    "platform_modules": [
      "installer-platform",
      "installer-performance", 
      "installer-migration"
    ],
    "required_dependencies": [
      "pathlib",
      "json",
      "threading",
      "asyncio"
    ],
    "optional_dependencies": [
      "psutil",
      "resource"
    ]
  },
  
  "development": {
    "debug_mode": false,
    "verbose_logging": false,
    "performance_profiling": true,
    "test_mode": false,
    "mock_execution": false
  },
  
  "monitoring": {
    "health_checks": true,
    "performance_alerts": true,
    "error_reporting": true,
    "metrics_export": false,
    "dashboard_enabled": false
  },
  
  "profiles": {
    "minimal": {
      "description": "Essential hooks for basic functionality",
      "hooks": ["map_session_check", "task_validator", "integration_bridge"],
      "target_users": ["beginners", "light_usage"]
    },
    
    "developer": {
      "description": "Productivity hooks for active development", 
      "hooks": [
        "map_update_checker", "map_session_check", "quality_gate_trigger",
        "mcp_router_advisor", "cache_invalidator", "task_validator",
        "execution_monitor", "integration_bridge"
      ],
      "target_users": ["developers", "power_users"]
    },
    
    "enterprise": {
      "description": "Complete automation suite for enterprise use",
      "hooks": [
        "map_update_checker", "map_session_check", "quality_gate_trigger",
        "mcp_router_advisor", "cache_invalidator", "evidence_collector",
        "hook_coordinator", "task_validator", "execution_monitor",
        "state_synchronizer", "dependency_resolver", "integration_bridge"
      ],
      "target_users": ["teams", "enterprise", "production"]
    }
  },
  
  "installation_targets": {
    "performance_expectations": {
      "quality_improvement": "15-30%",
      "performance_gains": "20-40%", 
      "validation_success": "95%+",
      "execution_time": "<100ms"
    },
    
    "claude_code_integration": {
      "settings_file": "~/.claude/settings.json",
      "hooks_directory": "~/.claude/SuperClaude/Hooks/",
      "backup_enabled": true,
      "validation_required": true
    },
    
    "installer_compatibility": {
      "installer_core": true,
      "installer_wizard": true,
      "installer_profiles": true,
      "installer_platform": true,
      "cross_platform": true
    }
  }
}