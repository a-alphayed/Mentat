{
  "superclaude": {
    "description": "SuperClaude-Lite Framework Configuration",
    "version": "1.0.0",
    "framework": "superclaude-lite",
    "enabled": true
  },
  
  "hook_configurations": {
    "session_start": {
      "enabled": true,
      "description": "SESSION_LIFECYCLE + FLAGS logic with intelligent bootstrap",
      "performance_target_ms": 50,
      "features": [
        "smart_project_context_loading",
        "automatic_mode_detection",
        "mcp_server_intelligence_routing",
        "user_preference_adaptation",
        "performance_optimized_initialization"
      ],
      "configuration": {
        "auto_project_detection": true,
        "framework_exclusion_enabled": true,
        "intelligence_activation": true,
        "learning_integration": true,
        "performance_monitoring": true
      },
      "error_handling": {
        "graceful_fallback": true,
        "preserve_user_context": true,
        "error_learning": true
      }
    },
    
    "pre_tool_use": {
      "enabled": true,
      "description": "ORCHESTRATOR + MCP routing intelligence for optimal tool selection",
      "performance_target_ms": 200,
      "features": [
        "intelligent_tool_routing",
        "mcp_server_selection",
        "performance_optimization",
        "context_aware_configuration",
        "fallback_strategy_implementation",
        "real_time_adaptation"
      ],
      "configuration": {
        "mcp_intelligence": true,
        "pattern_detection": true,
        "learning_adaptations": true,
        "performance_optimization": true,
        "fallback_strategies": true
      },
      "integration": {
        "mcp_servers": ["context7", "sequential", "magic", "playwright", "morphllm", "serena"],
        "quality_gates": true,
        "learning_engine": true
      }
    },
    
    "post_tool_use": {
      "enabled": true,
      "description": "RULES + PRINCIPLES validation and learning system",
      "performance_target_ms": 100,
      "features": [
        "quality_validation",
        "rules_compliance_checking",
        "principles_alignment_verification",
        "effectiveness_measurement",
        "error_pattern_detection",
        "learning_opportunity_identification"
      ],
      "configuration": {
        "rules_validation": true,
        "principles_validation": true,
        "quality_standards_enforcement": true,
        "effectiveness_tracking": true,
        "learning_integration": true
      },
      "validation_levels": {
        "basic": ["syntax_validation"],
        "standard": ["syntax_validation", "type_analysis", "code_quality"],
        "comprehensive": ["syntax_validation", "type_analysis", "code_quality", "security_assessment", "performance_analysis"],
        "production": ["syntax_validation", "type_analysis", "code_quality", "security_assessment", "performance_analysis", "integration_testing", "deployment_validation"]
      }
    },
    
    "pre_compact": {
      "enabled": true,
      "description": "MODE_Token_Efficiency compression algorithms with intelligent optimization",
      "performance_target_ms": 150,
      "features": [
        "intelligent_compression_strategy_selection",
        "selective_content_preservation",
        "framework_exclusion",
        "symbol_systems_optimization",
        "abbreviation_systems",
        "quality_gated_compression"
      ],
      "configuration": {
        "selective_compression": true,
        "framework_protection": true,
        "quality_preservation_target": 0.95,
        "compression_efficiency_target": 0.50,
        "adaptive_compression": true
      },
      "compression_levels": {
        "minimal": "0-40%",
        "efficient": "40-70%",
        "compressed": "70-85%",
        "critical": "85-95%",
        "emergency": "95%+"
      }
    },
    
    "notification": {
      "enabled": true,
      "description": "Just-in-time MCP documentation loading and pattern updates",
      "performance_target_ms": 100,
      "features": [
        "just_in_time_documentation_loading",
        "dynamic_pattern_updates",
        "framework_intelligence_updates",
        "real_time_learning",
        "performance_optimization_through_caching"
      ],
      "configuration": {
        "jit_documentation_loading": true,
        "pattern_updates": true,
        "intelligence_caching": true,
        "learning_integration": true,
        "performance_optimization": true
      },
      "caching": {
        "documentation_cache_minutes": 30,
        "pattern_cache_minutes": 60,
        "intelligence_cache_minutes": 15
      }
    },
    
    "stop": {
      "enabled": true,
      "description": "Session analytics + /sc:save logic with performance tracking",
      "performance_target_ms": 200,
      "features": [
        "comprehensive_session_analytics",
        "learning_consolidation",
        "session_persistence",
        "performance_optimization_recommendations",
        "quality_assessment_and_improvement_suggestions"
      ],
      "configuration": {
        "session_analytics": true,
        "learning_consolidation": true,
        "session_persistence": true,
        "performance_tracking": true,
        "recommendation_generation": true
      },
      "analytics": {
        "performance_metrics": true,
        "effectiveness_measurement": true,
        "learning_insights": true,
        "optimization_recommendations": true
      }
    },
    
    "subagent_stop": {
      "enabled": true,
      "description": "MODE_Task_Management delegation coordination and analytics",
      "performance_target_ms": 150,
      "features": [
        "subagent_performance_analytics",
        "delegation_effectiveness_measurement",
        "cross_agent_learning",
        "wave_orchestration_optimization",
        "parallel_execution_performance_tracking"
      ],
      "configuration": {
        "delegation_analytics": true,
        "coordination_measurement": true,
        "wave_orchestration": true,
        "performance_tracking": true,
        "learning_integration": true
      },
      "task_management": {
        "delegation_strategies": ["files", "folders", "auto"],
        "wave_orchestration": true,
        "parallel_coordination": true,
        "performance_optimization": true
      }
    }
  },
  
  "global_configuration": {
    "framework_integration": {
      "superclaude_compliance": true,
      "yaml_driven_logic": true,
      "hot_reload_configuration": true,
      "cross_hook_coordination": true
    },
    
    "performance_monitoring": {
      "enabled": true,
      "real_time_tracking": true,
      "target_enforcement": true,
      "optimization_suggestions": true,
      "performance_analytics": true
    },
    
    "learning_system": {
      "enabled": true,
      "cross_hook_learning": true,
      "adaptation_application": true,
      "effectiveness_tracking": true,
      "pattern_recognition": true
    },
    
    "error_handling": {
      "graceful_degradation": true,
      "fallback_strategies": true,
      "error_learning": true,
      "recovery_optimization": true
    },
    
    "security": {
      "input_validation": true,
      "path_traversal_protection": true,
      "timeout_protection": true,
      "resource_limits": true
    }
  },
  
  "mcp_server_integration": {
    "enabled": true,
    "servers": {
      "context7": {
        "description": "Library documentation and framework patterns",
        "capabilities": ["documentation_access", "framework_patterns", "best_practices"],
        "performance_profile": "standard"
      },
      "sequential": {
        "description": "Multi-step reasoning and complex analysis",
        "capabilities": ["complex_reasoning", "systematic_analysis", "hypothesis_testing"],
        "performance_profile": "intensive"
      },
      "magic": {
        "description": "UI component generation and design systems",
        "capabilities": ["ui_generation", "design_systems", "component_patterns"],
        "performance_profile": "standard"
      },
      "playwright": {
        "description": "Browser automation and testing",
        "capabilities": ["browser_automation", "testing_frameworks", "performance_testing"],
        "performance_profile": "intensive"
      },
      "morphllm": {
        "description": "Intelligent editing with fast apply",
        "capabilities": ["pattern_application", "fast_apply", "intelligent_editing"],
        "performance_profile": "lightweight"
      },
      "serena": {
        "description": "Semantic analysis and memory management",
        "capabilities": ["semantic_understanding", "project_context", "memory_management"],
        "performance_profile": "standard"
      }
    },
    
    "coordination": {
      "intelligent_routing": true,
      "fallback_strategies": true,
      "performance_optimization": true,
      "learning_adaptation": true
    }
  },
  
  "mode_integration": {
    "enabled": true,
    "modes": {
      "brainstorming": {
        "description": "Interactive requirements discovery",
        "hooks": ["session_start", "notification"],
        "mcp_servers": ["sequential", "context7"]
      },
      "task_management": {
        "description": "Multi-layer task orchestration",
        "hooks": ["session_start", "pre_tool_use", "subagent_stop", "stop"],
        "mcp_servers": ["serena", "morphllm"]
      },
      "token_efficiency": {
        "description": "Intelligent token optimization",
        "hooks": ["pre_compact", "session_start"],
        "mcp_servers": ["morphllm"]
      },
      "introspection": {
        "description": "Meta-cognitive analysis",
        "hooks": ["post_tool_use", "stop"],
        "mcp_servers": ["sequential"]
      }
    }
  },
  
  "quality_gates": {
    "enabled": true,
    "8_step_validation": {
      "step_1": "syntax_validation",
      "step_2": "type_analysis",
      "step_3": "code_quality",
      "step_4": "security_assessment",
      "step_5": "testing_validation",
      "step_6": "performance_analysis",
      "step_7": "documentation_verification",
      "step_8": "integration_testing"
    },
    "hook_integration": {
      "pre_tool_use": ["step_1", "step_2"],
      "post_tool_use": ["step_3", "step_4", "step_5"],
      "stop": ["step_6", "step_7", "step_8"]
    }
  },
  
  "cache_configuration": {
    "enabled": true,
    "cache_directory": "./cache",
    "learning_data_retention_days": 90,
    "session_data_retention_days": 30,
    "performance_data_retention_days": 365,
    "automatic_cleanup": true
  },
  
  "logging_configuration": {
    "enabled": true,
    "log_level": "INFO",
    "performance_logging": true,
    "error_logging": true,
    "learning_logging": true,
    "hook_execution_logging": true
  },
  
  "development_support": {
    "debugging_enabled": false,
    "performance_profiling": false,
    "verbose_logging": false,
    "test_mode": false
  }
}