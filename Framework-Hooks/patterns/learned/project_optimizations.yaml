# Learned Project Optimizations Pattern
# Project-specific adaptations that improve over time

project_profile:
  id: "superclaude_framework"
  type: "python_framework"
  created: "2025-01-31"
  last_analyzed: "2025-01-31"
  optimization_cycles: 0

learned_optimizations:
  file_patterns:
    high_frequency_files:
      patterns:
        - "commands/*.md" 
        - "Core/*.md"
        - "Modes/*.md"
        - "MCP/*.md"
      frequency_weight: 0.9
      cache_priority: "high"
      
    structural_patterns:
      patterns:
        - "markdown documentation with YAML frontmatter"
        - "python scripts with comprehensive docstrings"
        - "modular architecture with clear separation"
      optimization: "maintain full context for these patterns"
      
  workflow_optimizations:
    effective_sequences:
      - sequence: ["Read", "Edit", "Validate"]
        success_rate: 0.95
        context: "documentation updates"
        
      - sequence: ["Glob", "Read", "MultiEdit"]
        success_rate: 0.88
        context: "multi-file refactoring"
        
      - sequence: ["Serena analyze", "Morphllm execute"]
        success_rate: 0.92
        context: "large codebase changes"
        
  mcp_server_effectiveness:
    serena:
      effectiveness: 0.9
      optimal_contexts:
        - "framework documentation analysis"
        - "cross-file relationship mapping"
        - "memory-driven development"
      performance_notes: "excellent for project context"
      
    sequential:
      effectiveness: 0.85
      optimal_contexts:
        - "complex architectural decisions"
        - "multi-step problem solving"
        - "systematic analysis"
      performance_notes: "valuable for thinking-intensive tasks"
      
    morphllm:
      effectiveness: 0.8
      optimal_contexts:
        - "pattern-based editing"
        - "documentation updates"
        - "style consistency"
      performance_notes: "efficient for text transformations"

compression_learnings:
  effective_strategies:
    framework_content:
      strategy: "complete_preservation"
      reason: "high information density, frequent reference"
      effectiveness: 0.95
      
    session_metadata:
      strategy: "aggressive_compression"
      ratio: 0.7
      effectiveness: 0.88
      quality_preservation: 0.96
      
  symbol_system_adoption:
    technical_symbols: 0.9  # High adoption rate
    status_symbols: 0.85   # Good adoption rate
    flow_symbols: 0.8     # Good adoption rate
    effectiveness: "significantly improved readability"

quality_gate_refinements:
  validation_priorities:
    - "markdown syntax validation"
    - "YAML frontmatter validation"
    - "cross-reference consistency"
    - "documentation completeness"
    
  custom_rules:
    - rule: "SuperClaude framework paths preserved"
      enforcement: "strict"
      violation_action: "immediate_alert"
      
    - rule: "session lifecycle compliance"
      enforcement: "standard"
      violation_action: "warning_with_suggestion"

performance_insights:
  bottleneck_identification:
    - area: "large markdown file processing"
      impact: "medium"
      optimization: "selective reading with targeted edits"
      
    - area: "cross-file reference validation"
      impact: "low"
      optimization: "cached reference mapping"
      
  acceleration_opportunities:
    - opportunity: "pattern-based file detection"
      potential_improvement: "40% faster file processing"
      implementation: "regex pre-filtering"
      
    - opportunity: "intelligent caching"
      potential_improvement: "60% faster repeated operations"
      implementation: "content-aware cache keys"

error_pattern_learning:
  common_issues:
    - issue: "path traversal in framework files"
      frequency: 0.15
      resolution: "automatic path validation"
      prevention: "framework exclusion patterns"
      
    - issue: "markdown syntax in code blocks"
      frequency: 0.08
      resolution: "improved syntax detection"
      prevention: "context-aware parsing"
      
  recovery_strategies:
    - strategy: "graceful fallback to standard tools"
      effectiveness: 0.9
      context: "MCP server unavailability"
      
    - strategy: "partial result delivery"
      effectiveness: 0.85
      context: "timeout scenarios"

adaptive_rules:
  mode_activation_refinements:
    task_management:
      threshold: 0.85  # Raised due to project complexity
      reason: "framework development benefits from structured approach"
      
    token_efficiency:
      threshold: 0.7   # Standard due to balanced content types
      reason: "mixed documentation and code content"
      
  mcp_coordination_rules:
    - rule: "always activate serena for framework operations"
      confidence: 0.95
      effectiveness: 0.92
      
    - rule: "use morphllm for documentation pattern updates"
      confidence: 0.88
      effectiveness: 0.87

continuous_improvement:
  learning_velocity: "high"  # Framework actively evolving
  pattern_stability: "medium"  # Architecture still developing
  optimization_frequency: "per_session"
  
  success_metrics:
    operation_speed: "+25% improvement target"
    quality_preservation: "98% minimum"
    user_satisfaction: "90% target"
    
  next_optimization_cycle:
    focus_areas:
      - "cross-file relationship mapping"
      - "intelligent pattern detection"
      - "performance monitoring integration"
    target_date: "next_major_session"